<!-- <!DOCTYPE html>
<html lang="en">
    <head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no">
    <title>구르망 맛집 지도</title>
    <script type="text/javascript" src="https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=2pd1thd6bp"></script>
    <script
    src="https://code.jquery.com/jquery-3.5.1.min.js"
    integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
    crossorigin="anonymous"></script>
    <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=2751e5ff98b4f87d7036f2f1e4c03b3f&libraries=services"></script>
    <link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css" integrity="sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p" crossorigin="anonymous"/>


    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/stylesheets/showlist.css">
    <<script src="https://use.fontawesome.com/releases/v5.2.0/js/all.js"></script>
    </head>
<body>

    <ul id="navbar">
        <li>
          <a href="/mymap" id="name" style="width: 169px; text-align: center;"></a>
        </li>
        <li style="float: right;">
          <a class="active" href="/upload">맛집 등록하기</a>
        </li>
        <li style="float: right;">
        <a class="activedelete" href="/showlist" onclick="onDelete()">모든 맛집 삭제하기</a>
        </li>
        <li style="float: right;">
          <a class="showlist" href="/showlist">맛집 리스트 추가하기</a>
        </li>
      </ul>
      <div id ="infoBox">
        <div id="infoTitle">HOME</div>
        <a href="http://localhost:8080/"><i class="fas fa-home" style="font-size: 25px; color:#642A02;" ></i></a>
      </div>
        <div id="map" style="width:100%; height:100vh;"></div>
        <script type="text/javascript" src="/javascripts/MarkerClustering.js"></script>
        <script type="text/javascript" src="/javascripts/main.js"></script>


    <div class="wrapper">
        <header style="text-align:center">구르망 맛집 리스트</header>
        <div class="inputField">
        <input type="text" placeholder="맛집 리스트명을 작성해주세요">
        <button><i class="fas fa-plus"></i></button>
        </div>
        <ul class="todoList">

        </ul>
        <div class="footer">
        <span>맛집 리스트 <span class="pendingTasks"></span>개</span>
        <button>모두 삭제</button>
       
        </div>
        <button class="listbutton" onclick="registerList()">등록</button>
        
    </div>

</body>

<script>

window.onload = function () {
  $.ajax({
      url: "/mymap/printname",
      type: "GET", 
  })
  .done((response) => {
      document.getElementById('name').innerHTML = `${response.data}님의 맛집지도`;
      console.log("토큰 데이터 입력 성공");
  })
  .fail((error) => {
      console.log("토큰 데이터 입력 실패");
  });
}

$("#current").click(() => {
  if("geolocation" in navigator){
    navigator.geolocation.getCurrentPosition(function (position){
        const lat = position.coords.latitude;
        const lng = position.coords.longitude;
        const latlng = new naver.maps.LatLng(lat, lng);
        if (currentUse){
        marker = new naver.maps.Marker({
          map:map,
          position: latlng,
          icon: {
            content: 
            '<img class = "pulse" draggable="false" unselectable="on" src="https://myfirstmap.s3.ap-northeast-2.amazonaws.com/circle.png">',
            anchor: new naver.maps.Point(11,11),    
          },
        });
        currentUse = false;
    }
        map.setZoom(14, false);
        map.panTo(latlng);
    });

} else{
  alert("위치정보 사용 불가능");ㅣ
  }
});

// DB에 등록된 맛집 모두 삭제
function onDelete() {
  $.ajax({
      url: "/location/delete/all",
      type: "DELETE", 
  })
  .done((response) => {
      console.log("데이터 요청 성공");
      alert("모든 맛집이 삭제되었습니다.");
  })
  .fail((error) => {
      console.log("데이터 요청 실패");
      alert("모든 맛집 삭제 실패.");
  });
}

// getting all required elements
const inputBox = document.querySelector(".inputField input");
const addBtn = document.querySelector(".inputField button");
const todoList = document.querySelector(".todoList");
const deleteAllBtn = document.querySelector(".footer button");

// onkeyup event
inputBox.onkeyup = ()=>{
  let userEnteredValue = inputBox.value; //getting user entered value
  if(userEnteredValue.trim() != 0){ //if the user value isn't only spaces
    addBtn.classList.add("active"); //active the add button
  }else{
    addBtn.classList.remove("active"); //unactive the add button
  }
}

showTasks(); //calling showTask function

addBtn.onclick = ()=>{ //when user click on plus icon button
  let userEnteredValue = inputBox.value; //getting input field value
  let getLocalStorageData = localStorage.getItem("New List"); //getting localstorage
  if(getLocalStorageData == null){ //if localstorage has no data
    listArray = []; //create a blank array
  }else{
    listArray = JSON.parse(getLocalStorageData);  //transforming json string into a js object
  }
  listArray.push(userEnteredValue); //pushing or adding new value in array
  localStorage.setItem("New List", JSON.stringify(listArray)); //transforming js object into a json string
  showTasks(); //calling showTask function
  addBtn.classList.remove("active"); //unactive the add button once the task added
}

function showTasks(){
  let getLocalStorageData = localStorage.getItem("New List");
  if(getLocalStorageData == null){
    listArray = [];
  }else{
    listArray = JSON.parse(getLocalStorageData); 
  }
  const pendingTasksNumb = document.querySelector(".pendingTasks");
  pendingTasksNumb.textContent = listArray.length; //passing the array length in pendingtask
  if(listArray.length > 0){ //if array length is greater than 0
    deleteAllBtn.classList.add("active"); //active the delete button
  }else{
    deleteAllBtn.classList.remove("active"); //unactive the delete button
  }
  let newLiTag = "";
  listArray.forEach((element, index) => {
    newLiTag += `<li>${element}<span class="icon" onclick="deleteTask(${index})"><i class="fas fa-trash"></i></span></li>`;
  });
  todoList.innerHTML = newLiTag; //adding new li tag inside ul tag
  inputBox.value = ""; //once task added leave the input field blank
}

// delete task function
function deleteTask(index){
  let getLocalStorageData = localStorage.getItem("New List");
  listArray = JSON.parse(getLocalStorageData);
  listArray.splice(index, 1); //delete or remove the li
  localStorage.setItem("New List", JSON.stringify(listArray));
  showTasks(); //call the showTasks function
}

// delete all tasks function
deleteAllBtn.onclick = ()=>{
  listArray = []; //empty the array
  localStorage.setItem("New List", JSON.stringify(listArray)); //set the item in localstorage
  showTasks(); //call the showTasks function
}


</script>
</html> -->

// window.onload = function () {
//   $.ajax({
//       url: "/location",
//       type: "GET", 
//   })
//   .done((response) => {
//     response.data
//     function registerList() {

//     let getLocalStorageData = localStorage.getItem("New List");
//     if(getLocalStorageData == null){
//         listArray = [];
//         listname = [];
//     }else{
//         listArray = JSON.parse(getLocalStorageData); 
//     }
//     console.log(listArray);
//     JSON.parse(localStorage.getItem("New List"))
//     if (listArray.length === 0 ) {
//         alert("새로운 리스트를 추가해주세요")
//     } else {
//         for(let i = 0; i < listArray.length; i++) {
//             listname[i] = listArray[i];
//             } 
//         }
//     }

//   }





